{
  "author": {
    "name": "AngularUI"
  },
  "name": "angular-ui-select2",
  "version": "0.0.2",
  "homepage": "http://angular-ui.github.com",
  "keywords": [
    "angular",
    "angularui",
    "select2"
  ],
  "main": "./src/select2.js",
  "dependencies": {
    "angular": ">= 1.0.2",
    "select2": "~3.4",
    "jquery": ">=1.6.4"
  },
  "devDependencies": {
    "angular-mocks": ">= 1.0.2"
  },
  "gitHead": "117bbbc0408a5933f580c6fe7b8e977181d01199",
  "readme": "ui-select2   [![Build Status](https://travis-ci.org/angular-ui/ui-select2.png)](https://travis-ci.org/angular-ui/ui-select2)\r\n==========\r\nThis directive allows you to enhance your select elements with behaviour from the [select2](http://ivaynberg.github.io/select2/) library.\r\n\r\n# Requirements\r\n\r\n- [AngularJS](http://angularjs.org/)\r\n- [JQuery](http://jquery.com/)\r\n- [Select2](http://ivaynberg.github.io/select2/)\r\n\r\n## Setup\r\n\r\n1. Install **karma**\r\n  `$ npm install -g karma`\r\n2. Install **bower**\r\n  `$ npm install -g bower`\r\n4. Install components\r\n  `$ bower install`\r\n4. ???\r\n5. Profit!\r\n\r\n## Testing\r\n\r\n`$ karma start test/test.conf.js --browsers=Chrome`\r\n\r\n# Usage\r\n\r\nWe use [bower](http://twitter.github.com/bower/) for dependency management.  Add\r\n\r\n```javascript\r\ndependencies: {\r\n    \"angular-ui-select2\": \"latest\"\r\n}\r\n```\r\n\r\nTo your `components.json` file. Then run\r\n\r\n    bower install\r\n\r\nThis will copy the ui-select2 files into your `components` folder, along with its dependencies. Load the script files in your application:\r\n```html\r\n<script type=\"text/javascript\" src=\"components/jquery/jquery.js\"></script>\r\n<script type=\"text/javascript\" src=\"components/angular/angular.js\"></script>\r\n<script type=\"text/javascript\" src=\"components/angular-ui-select2/src/select2.js\"></script>\r\n```\r\n\r\nAdd the select2 module as a dependency to your application module:\r\n\r\n```javascript\r\nvar myAppModule = angular.module('MyApp', ['ui.select2']);\r\n```\r\n\r\nApply the directive to your form elements:\r\n\r\n```html\r\n<select ui-select2 ng-model=\"select2\" data-placeholder=\"Pick a number\">\r\n    <option value=\"\"></option>\r\n    <option value=\"one\">First</option>\r\n    <option value=\"two\">Second</option>\r\n    <option value=\"three\">Third</option>\r\n</select>\r\n```\r\n\r\n## Options\r\n\r\nAll the select2 options can be passed through the directive. You can read more about the supported list of options and what they do on the [Select2 Documentation Page](http://ivaynberg.github.com/select2/)\r\n\r\n```javascript\r\nmyAppModule.controller('MyController', function($scope) {\r\n    $scope.select2Options = {\r\n        allowClear:true\r\n    };\r\n});\r\n```\r\n\r\n```html\r\n<select ui-select2=\"select2Options\" ng-model=\"select2\">\r\n    <option value=\"one\">First</option>\r\n    <option value=\"two\">Second</option>\r\n    <option value=\"three\">Third</option>\r\n</select>\r\n```\r\n\r\nSome time it may make sense to specify the options in the template file.\r\n\r\n```html\r\n<select ui-select2=\"{ allowClear: true}\" ng-model=\"select2\">\r\n    <option value=\"one\">First</option>\r\n    <option value=\"two\">Second</option>\r\n    <option value=\"three\">Third</option>\r\n</select>\r\n```\r\n\r\n## Working with ng-model\r\n\r\nThe ui-select2 directive plays nicely with ng-model and validation directives such as ng-required.\r\n\r\nIf you add the ng-model directive to same the element as ui-select2 then the picked option is automatically synchronized with the model value.\r\n\r\n## Working with dynamic options\r\n`ui-select2` is incompatible with `<select ng-options>`. For the best results use `<option ng-repeat>` instead.\r\n```html\r\n<select ui-select2 ng-model=\"select2\" data-placeholder=\"Pick a number\">\r\n    <option value=\"\"></option>\r\n    <option ng-repeat=\"{{number in range}}\" value=\"{{number.value}}\">{{number.text}}</option>\r\n</select>\r\n```\r\n\r\n## Working with placeholder text\r\nIn order to properly support the Select2 placeholder, create an empty `<option>` tag at the top of the `<select>` and either set a `data-placeholder` on the select element or pass a `placeholder` option to Select2.\r\n```html\r\n<select ui-select2 ng-model=\"number\" data-placeholder=\"Pick a number\">\r\n    <option value=\"\"></option>\r\n    <option value=\"one\">First</option>\r\n    <option value=\"two\">Second</option>\r\n    <option value=\"three\">Third</option>\r\n</select>\r\n```\r\n\r\n## ng-required directive\r\n\r\nIf you apply the required directive to element then the form element is invalid until an option is selected.\r\n\r\nNote: Remember that the ng-required directive must be explicitly set, i.e. to \"true\".  This is especially true on divs:\r\n\r\n```html\r\n<select ui-select2 ng-model=\"number\" data-placeholder=\"Pick a number\" ng-required=\"true\">\r\n    <option value=\"\"></option>\r\n    <option value=\"one\">First</option>\r\n    <option value=\"two\">Second</option>\r\n    <option value=\"three\">Third</option>\r\n</select>\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "angular-ui-select2@0.0.2",
  "description": "ui-select2   [![Build Status](https://travis-ci.org/angular-ui/ui-select2.png)](https://travis-ci.org/angular-ui/ui-select2)\r ==========\r This directive allows you to enhance your select elements with behaviour from the [select2](http://ivaynberg.github.io/select2/) library.",
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-select2.git"
  }
}